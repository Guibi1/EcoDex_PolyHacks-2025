import { GeistSans } from "geist/font/sans";
import type { Metadata } from "next";
import type { ReactNode } from "react";
import Navigation from "~/components/Navigation";
import MapProvider from "~/components/map/MapProvider";
import { Toaster } from "~/components/ui/sonner";
import { TRPCReactProvider } from "~/trpc/react";

import { dehydrate, HydrationBoundary } from "@tanstack/react-query";
import { createSupabase } from "~/lib/supabase/server";
import { createQueryClient } from "~/trpc/query-client";
import "../tailwind.css";

export const metadata: Metadata = {
    title: "Plant",
    description: "Generated by create-t3-app",
    icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({ children }: { children: ReactNode }) {
    const supabase = await createSupabase();
    const user = await supabase.auth.getUser().then((d) => d.data.user);

    const queryClient = createQueryClient();
    queryClient.prefetchQuery({
        queryKey: ["user", "current"],
        initialData: user,
    });

    return (
        <TRPCReactProvider>
            <HydrationBoundary state={dehydrate(queryClient)}>
                <MapProvider>
                    <html lang="en" className={`${GeistSans.variable}`}>
                        <body className="flex flex-col h-dvh overflow-hidden">
                            <div className="grow">{children}</div>

                            <Navigation />

                            <Toaster position="top-center" />
                        </body>
                    </html>
                </MapProvider>
            </HydrationBoundary>
        </TRPCReactProvider>
    );
}
